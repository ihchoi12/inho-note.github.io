---
title: "Welcome to Jekyll!"
date: 2021-03-27
categories:
  - Distributed Systems
tags:
  - Test
---

###### Transaction Concept
Goal: to group a set of operations into an **atomic** unit
4 guarantees: ACID
What is **Distributed** TX? TX on a **partitioned** (into multiple shards) DB (while preserving ACID)
Why partition? 1) storage capacity; 2) scalability (by distributing client requests);

###### Atomicity
- Executed (committed) by all participating shards or none (aborted)
- by **Two Phase Commit** (two rolse: 1 Coordinator & multiple Participants)
a) C sends PREPARE (for a TX) to Ps
b) P sends 1) YES (and waits for the decision); OR 2) NO (and unilaterally abort)
c) If all Ps vote YES, C sends COMMIT to Ps
d) Otherwise, C sends ABORT to those voted YES

###### Isolation
- Isolation of TX is similar to Consistency of distributed systems. (Consistency in ACID means consitency of DB)

[Consistency of OPs in DS]
- Sequential Consistency (also called Serializability, especially for TXs): history of operations is equivalent to a sequencial order **respecing local ordering**.  
- Linearizability: Sequential Consistency + repects real-time ordering. 
[Isolation of TXs in DB]
- Serializability:  
- Strict-Serializability:



You'll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

```ruby
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
```
<img src="{{ site.url }}{{ site.baseurl }}/assets/images/bio-photo.jpg" alt="">

![alt]({{ site.url }}{{ site.baseurl }}/assets/images/bio-photo.jpg)

<img src="{{ site.url }}{{ site.baseurl }}/assets/images/bio-photo.jpg" alt="" class="full">

![alt]({{ site.url }}{{ site.baseurl }}/assets/images/bio-photo.jpg)
{: .full}



Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyllâ€™s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
